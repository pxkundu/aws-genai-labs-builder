version: '3.8'

services:
  # Backend API Service
  backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DEBUG=true
      - ENVIRONMENT=development
      - MONGODB_URL=mongodb://mongodb:27017
      - REDIS_URL=redis://redis:6379
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app/backend
      - ./config:/app/config
    networks:
      - genai-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: genai-cs-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: customer_service
    volumes:
      - mongodb_data:/data/db
      - ./data/sample:/docker-entrypoint-initdb.d
    networks:
      - genai-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: genai-cs-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - genai-network

  # Web Dashboard
  web-dashboard:
    build:
      context: ./frontend/web-dashboard
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend/web-dashboard:/app
      - /app/node_modules
    networks:
      - genai-network

  # Customer Portal
  customer-portal:
    build:
      context: ./frontend/customer-portal
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend/customer-portal:/app
      - /app/node_modules
    networks:
      - genai-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - web-dashboard
      - customer-portal
    networks:
      - genai-network

volumes:
  mongodb_data:
  redis_data:

networks:
  genai-network:
    driver: bridge
